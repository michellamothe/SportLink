@startuml SportLink

class Utilisateur {
  - {field} id : UUID
  - {field} nomUtilisateur : String
  - {field} courriel : String
  - {field} motDePasse : String
  - {field} dateDeNaissance : String
  - {field} ville : String
  - {field} sportsFavoris : List<Sport>
  - {field} disponibilites : List<JourSemaine>
  - {field} photoProfil : String

  + {method} ModeUtilisateur
}

class GestionUtilisateur {
    + inscrire(courriel : String, nomUtilisateur : String, motDePasse : String) : Bool
    + connecter(courriel : String, motDePasse : String) : Utilisateur
}

GestionUtilisateur --> Utilisateur : utilise

class ProfilUtilisateurVueModele {
  - {field} utilisateur : Utilisateur
  - {field} estEnChargement : Bool
  + {method} modifierMotDePasse(nouveauMotDePasse : String) : void
  + {method} chargerUtilisateur() : void
  + {method} modifierProfil(ville : String, sportsFavoris : List<Sport>, disponibilites : List<String>, photoProfil : String) : void
  + {method} changerPhotoProfil(nouvellePhoto : String) : void
}

class ProfilUtilisateurVue {
  - {field} vueModele : ProfilUtilisateurVueModele
}

ProfilUtilisateurVueModele "1" --* "1" Utilisateur
ProfilUtilisateurVue ..> ProfilUtilisateurVueModele

class Activite {
  - {field} id : UUID
  - {field} sport : Sport
  - {field} intervalleDate : DateInterval 
  - {field} placesDisponibles : Integer
  - {field} niveau : Niveau
  - {field} coordonnees : CLLocationCoordinate2D
  - {field} messages : List<Message>
  - {field} mode : ModeUtilisateur
}

class ActiviteVueModele {
  - {field} activite : Activite
  - {field} estEnChargement : Bool
}

class ActiviteVue {
  - {field} vueModele : ActiviteVueModele
}

ActiviteVueModele "1" --* "1" Activite
ActiviteVue ..> ActiviteVueModele

class CreationEvenementVueModele {
  - utilisateur : Utilisateur
  + {method} creerEvenement(date : Date, sport : Sport, places : Integer, debut : String, fin : String, lieu : String) : Activite
  + {method} creerEvenementCompetitif(date : Date, sport : Sport, places : Integer, debut : String, fin : String, lieu : String, niveau : Niveau) : Activite
}

class CreationEvenementVue {
  - vueModele : CreationEvenementVueModele
}

CreationEvenementVue ..> CreationEvenementVueModele
CreationEvenementVueModele --> Utilisateur : selon le mode
CreationEvenementVueModele --> Activite : crÃ©e

class Message {
  - {field} id : UUID
  - {field} contenu : String
  - {field} envoyeA : Date
  - {field} expediteur : Utilisateur
  - {field} idActivite : UUID
}

class MessageVueModele {
  - {field} message : Message
  - {field} estEnChargement : Bool
}

class MessageVue {
  - {field} vueModele : MessageVueModele
}

MessageVueModele "1" --* "1" Message
MessageVue ..> MessageVueModele

enum Niveau {
  Debutant
  Intermediaire
  Avance
}

enum Sport {
  Basketball
  Soccer
  Volleyball
  Baseball
  Tennis
  Badminton
  Pickleball
  Waterpolo
  Football
  Rugby
  Ultimate
  Hockey
}

enum ModeUtilisateur {
  Recreatif
  Competitif
}

@enduml